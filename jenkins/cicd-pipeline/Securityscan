pipeline {
  agent  any
  
    stages {

      stage ('Checkout SCM'){
        steps {
          checkout([$class: 'GitSCM', branches: [[name: '*/main']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'githg', url: 'https://github.com/Harissh77/IATF.git']]])
        }
      }


     
      stage('Set Terraform path') {
       steps {
         script {
            def tfHome = tool name: 'terraform'
            env.PATH = "${tfHome}:${env.PATH}"
         }
     }
  }

  
  stage('terraform init') {
 
       steps {
           dir ("infrastructure-tests") {
                script {
                    withAWS(roleAccount:'970547336061', role:'HGRole1', useNode: true) {
                    sh 'terraform init -no-color'
                    }
             }
           }
        }
      }

stage('SecirityScan') {
    steps {
       script {
         try{
         sh "checkov -d infrastructure-tests -o junitxml --output-file-path scanreport"
         junit skipPublishingChecks: false, testResults: 'scanreport/results_junitxml.xml'
         }
         catch (err) {
           junit skipPublishingChecks: false, testResults: 'scanreport/results_junitxml.xml'
           throw err
         }
       }
    }
  }





      

      
   }
}
